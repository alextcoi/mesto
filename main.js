(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n,r,o){var i=e.data,c=e.handleCardClick,u=e.handleRemoveClick;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=i.name,this._link=i.link,this._likes=i.likes,this._owner=i.owner,this._id=i._id,this._myId=r,this._cardSelector=n,this._handleCardClick=c,this._handleRemoveClick=u,this.api=o}var n,r;return n=t,(r=[{key:"generateCard",value:function(){var e=this;return this._element=this._getTemplate(),this._setEventListeners(),this._element.querySelector(".element__pic").src=this._link,this._element.querySelector(".element__pic").alt=this._name,this._element.querySelector(".element__text").textContent=this._name,this._element.querySelector(".element__button-counter").textContent=this._likes.length,this._likes.some((function(t){return t._id===e._myId}))&&this._element.querySelector(".element__button").classList.add("element__button_clicked"),this._owner._id!==this._myId&&this._element.querySelector(".element__delete").remove(),this._element}},{key:"_toggleLike",value:function(e,t){var n=this;this._checkLikes()?this.api.deleteLike(t).then((function(t){n._likes=t.likes,n._element.querySelector(".element__button-counter").textContent=t.likes.length,e.target.classList.remove("element__button_clicked")})).catch((function(e){console.log(e)})):this.api.putLike(t).then((function(t){n._likes=t.likes,n._element.querySelector(".element__button-counter").textContent=t.likes.length,e.target.classList.add("element__button_clicked")})).catch((function(e){console.log(e)}))}},{key:"_checkLikes",value:function(){var e=this;return this._likes.some((function(t){return t._id===e._myId}))}},{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.firstElementChild.cloneNode(!0)}},{key:"_setEventListeners",value:function(){var e=this;this._element.querySelector(".element__button").addEventListener("click",(function(t){return e._toggleLike(t,e._id)})),this._element.querySelector(".element__delete").addEventListener("click",(function(){return e._handleRemoveClick()})),this._element.querySelector(".element__pic").addEventListener("click",(function(){return e._handleCardClick()}))}}])&&e(n.prototype,r),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=document.querySelector(t),this._clickOutside=this._clickOutside.bind(this),this._handleEscClose=this._handleEscClose.bind(this),this.close=this.close.bind(this),this._closeButton=this._popup.querySelector(".popup__close-button")}var t,r;return t=e,(r=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keyup",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keyup",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"_clickOutside",value:function(e){e.target.classList.contains("popup_opened")&&this.close()}},{key:"setEventListeners",value:function(){this._popup.addEventListener("click",this._clickOutside),this._closeButton.addEventListener("click",this.close)}}])&&n(t.prototype,r),e}();function o(e){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function c(e,t,n){return(c="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=l(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function u(e,t){return(u=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function a(e,t){return!t||"object"!==o(t)&&"function"!=typeof t?s(e):t}function s(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function l(e){return(l=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var f=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&u(e,t)}(p,e);var t,n,r,o,f=(r=p,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=l(r);if(o){var n=l(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return a(this,e)});function p(e,t){var n,r=t.handleFormSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,p),(n=f.call(this,e))._form=n._popup.querySelector(".popup__form"),n._handleFormSubmit=r,n._saveButton=n._popup.querySelector(".popup__button"),n.close=n.close.bind(s(n)),n._formSubmitter=n._formSubmitter.bind(s(n)),n}return t=p,(n=[{key:"renderLoading",value:function(e){this._saveButton.textContent=e?"Сохранение...":"Сохранить"}},{key:"_getInputValues",value:function(){var e=this;return this._inputList=this._form.querySelectorAll(".popup__input"),this._formValues={},this._inputList.forEach((function(t){e._formValues[t.name]=t.value})),this._formValues}},{key:"setEventListeners",value:function(){c(l(p.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",this._formSubmitter)}},{key:"_formSubmitter",value:function(e){e.preventDefault(),this._handleFormSubmit(this._getInputValues())}},{key:"close",value:function(){this._form.reset(),c(l(p.prototype),"close",this).call(this)}}])&&i(t.prototype,n),p}(r);function p(e){return(p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function h(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function _(e,t,n){return(_="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=m(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function d(e,t){return(d=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function y(e,t){return!t||"object"!==p(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function m(e){return(m=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var v=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&d(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=m(r);if(o){var n=m(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return y(this,e)});function c(e,t,n){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(r=i.call(this,e))._imageName=r._popup.querySelector(t),r._image=r._popup.querySelector(n),r}return t=c,(n=[{key:"open",value:function(e,t){this._imageName.textContent=e,this._image.src=t,this._image.alt=e,_(m(c.prototype),"open",this).call(this)}}])&&h(t.prototype,n),c}(r);function b(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var k=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=r,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(e){var t=this;e.forEach((function(e){return t._renderer(e)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&b(t.prototype,n),e}();function g(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var S=function(){function e(t){var n=t.userName,r=t.userTitle,o=t.userAvatar;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._userName=document.querySelector(n),this._userTitle=document.querySelector(r),this._userAvatar=document.querySelector(o)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._userName.textContent,profession:this._userTitle.textContent}}},{key:"setUserInfo",value:function(e){this._userName.textContent=e.name,this._userTitle.textContent=e.about,this._userAvatar.src=e.avatar,this._userAvatar.alt=e.name}}])&&g(t.prototype,n),e}();function E(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var w=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._formSelector=n,this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass}var t,n;return t=e,(n=[{key:"enableValidation",value:function(){var e=this;Array.from(document.querySelectorAll(this._formSelector)).forEach((function(t){t.addEventListener("submit",(function(e){e.preventDefault()})),e._setEventListeners(t)}))}},{key:"_setEventListeners",value:function(e){var t=this,n=Array.from(e.querySelectorAll(this._inputSelector)),r=e.querySelector(this._submitButtonSelector);e.addEventListener("reset",(function(){n.forEach((function(o){t._hideInputError(e,o),t._toggleButtonState(n,r)}))})),this._toggleButtonState(n,r),n.forEach((function(o){(""===o.value||o.validity.valid)&&t._hideInputError(e,o),o.addEventListener("input",(function(){t._checkInputValidity(e,o),t._toggleButtonState(n,r)}))}))}},{key:"_checkInputValidity",value:function(e,t){t.validity.valid?this._hideInputError(e,t):this._showInputError(e,t,t.validationMessage)}},{key:"_toggleButtonState",value:function(e,t){this._hasInvalidInput(e)?(t.disabled=!0,t.classList.add(this._inactiveButtonClass)):(t.disabled=!1,t.classList.remove(this._inactiveButtonClass))}},{key:"_hasInvalidInput",value:function(e){return e.some((function(e){return!e.validity.valid}))}},{key:"_showInputError",value:function(e,t,n){var r=e.querySelector(".".concat(t.id,"-error"));t.classList.add(this._inputErrorClass),r.textContent=n,r.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(e,t){var n=e.querySelector(".".concat(t.id,"-error"));t.classList.remove(this._inputErrorClass),n.classList.remove(this._errorClass),n.textContent=""}}])&&E(t.prototype,n),e}();function C(e){return(C="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function L(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function O(e,t,n){return(O="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=R(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function P(e,t){return(P=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function j(e,t){return!t||"object"!==C(t)&&"function"!=typeof t?q(e):t}function q(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function R(e){return(R=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var I=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&P(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=R(r);if(o){var n=R(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return j(this,e)});function c(e,t){var n,r=t.handleFormSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(n=i.call(this,e))._form=n._popup.querySelector(".popup__form"),n._saveButton=n._popup.querySelector(".popup__button"),n._handleFormSubmit=r,n.close=n.close.bind(q(n)),n._formSubmitter=n._formSubmitter.bind(q(n)),n}return t=c,(n=[{key:"renderLoading",value:function(e){this._saveButton.textContent=e?"Удаление...":"Удалить"}},{key:"setEventListeners",value:function(){O(R(c.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",this._formSubmitter)}},{key:"_formSubmitter",value:function(e){e.preventDefault(),this._handleFormSubmit(this._cardId)}},{key:"open",value:function(e,t){O(R(c.prototype),"open",this).call(this),this._element=e._element,this._cardId=t}},{key:"deleteCard",value:function(){this._element.remove()}}])&&L(t.prototype,n),c}(r);function T(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var x,B=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._password=n,this._baseUrl=t}var t,n;return t=e,(n=[{key:"getProfile",value:function(){return fetch("".concat(this._baseUrl,"/users/me"),{method:"GET",headers:{authorization:this._password}}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))}},{key:"getCards",value:function(){return fetch("".concat(this._baseUrl,"/cards"),{method:"GET",headers:{authorization:this._password}}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))}},{key:"putLike",value:function(e){return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"PUT",headers:{authorization:this._password}}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))}},{key:"deleteLike",value:function(e){return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"DELETE",headers:{authorization:this._password}}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))}},{key:"patchProfile",value:function(e){return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:{authorization:this._password,"Content-Type":"application/json"},body:JSON.stringify({name:e.form_name,about:e.form_profession})}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))}},{key:"patchProfilePic",value:function(e){return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:{authorization:this._password,"Content-Type":"application/json"},body:JSON.stringify({avatar:e.avatar})}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))}},{key:"postPicture",value:function(e){return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:{authorization:this._password,"Content-Type":"application/json"},body:JSON.stringify({name:e.name,link:e.link})}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))}},{key:"deletePicture",value:function(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:{authorization:"f0a6b51b-b6dd-4422-9c6f-1c6d9f1c16da"}}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))}}])&&T(t.prototype,n),e}(),U=document.querySelector(".profile__edit-button"),A=document.querySelector("#form-name"),D=document.querySelector("#form-profession"),N=document.querySelector(".profile__add-button"),V=document.querySelector(".profile__avatar-container"),F=document.querySelector(".profile__avatar"),z=(document.querySelector(".profile__title"),document.querySelector(".profile__subtitle"),{formSelector:".form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"}),J=new v(".popup_opened-card",".opened-card__name",".opened-card__pic");J.setEventListeners();var G=new S({userName:".profile__title",userTitle:".profile__subtitle",userAvatar:".profile__avatar"}),H=new B("https://mesto.nomoreparties.co/v1/cohort-20","f0a6b51b-b6dd-4422-9c6f-1c6d9f1c16da"),M=new I(".popup_delete-card",{handleFormSubmit:function(e){M.renderLoading(!0),H.deletePicture(e).then((function(){M.deleteCard(),M.close()})).catch((function(e){console.log(e)})).finally((function(){return M.renderLoading(!1)}))}});M.setEventListeners(),H.getProfile().then((function(e){G.setUserInfo(e),x=e._id})).catch((function(e){console.log(e)}));var K=new k({renderer:function(e){var n=new t({data:e,handleCardClick:function(){J.open(e.name,e.link)},handleRemoveClick:function(){M.open(n,e._id)}},".default-card",x,H),r=n.generateCard();K.addItem(r)}},".elements__container");H.getCards().then((function(e){var t=e.reverse();K.renderItems(t)})).catch((function(e){console.log(e)}));var Q=new f(".popup_card",{handleFormSubmit:function(e){Q.renderLoading(!0),H.postPicture(e).then((function(e){return K.renderItems([e])})).then((function(){return Q.close()})).catch((function(e){console.log(e)})).finally((function(){return Q.renderLoading(!1)}))}});Q.setEventListeners();var W=new f(".popup_profile",{handleFormSubmit:function(e){W.renderLoading(!0),H.patchProfile(e).then((function(e){return G.setUserInfo(e)})).catch((function(e){console.log(e)})).finally((function(){return W.renderLoading(!1)})),W.close()}});W.setEventListeners();var X=new f(".popup_profile-picture",{handleFormSubmit:function(e){X.renderLoading(!0),F.src=e.avatar,H.patchProfilePic(e).catch((function(e){return console.log(e)})).finally((function(){return X.renderLoading(!1)})),X.close()}});X.setEventListeners(),new w(z,".form_card").enableValidation(),new w(z,".form_profile-pic").enableValidation(),new w(z,".form_profile").enableValidation(),N.addEventListener("click",(function(){Q.open()})),V.addEventListener("click",(function(){X.open()})),U.addEventListener("click",(function(){W.open();var e=G.getUserInfo();A.setAttribute("value",e.name),D.setAttribute("value",e.profession)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,